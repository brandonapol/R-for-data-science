tidyverse_update()
help()
install.packages("tidyverse")
install.packages(c("nycflights13", "gapminder", "Lahman"))
1 + 2
dput(mtcars)
library(tidyverse)
myplot <- mpg
myplot
myplot <- mpg
myplot
gplot(data = mpg)
ggplot(data = mpg)
ggplot(data = mpg)
geom_point(mapping = aes(x = displ, y = hwy))
myplot <- mpg
myplot
myplot <- mpg
myplot
ggplot(data = mpg)
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg)
mtcars
?mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = cty))
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y = cty))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, shape = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = "blue"))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy) color = "blue")
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy), color = "blue")
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy), color = rgb(200,200,5))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy), color = rgb(0,200,5))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy), color = rgb(0,1,0))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy), color = rgb(0.7,1,0))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy), color = rgb(0.7,1,0.3))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = displ < 5))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class))
# also try color = displ < 5)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, shape = class, color = class))
?geom_point
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, stroke = class, color = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, stroke = class)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, stroke = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, stroke = cty))
vignette("ggplot2-specs")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = rgb(0.7,1,0.3)) +
# also try: ...y = hwy, shape = class))
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = rgb(0.7,1,0.3)) +
# also try: ...y = hwy, shape = class))
facet_wrap(~ hwy, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = rgb(0.7,1,0.3)) +
# also try: ...y = hwy, shape = class))
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) + #, color = rgb(0.7,1,0.3)) +
# also try: ...y = hwy, shape = class))
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class)) + #, color = rgb(0.7,1,0.3)) +
# also try: ...y = hwy, shape = class))
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class)) + #, color = rgb(0.7,1,0.3)) +
# also try: ...y = hwy, shape = class))
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = drv, y = cyl))
?mpg
ggplot(data = mpg) +
facet_grid(drv ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = drv, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
facet_grid(drv ~ .)
facet_grid(drv ~ hwy)
facet_grid(drv ~ hwy)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ hwy)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
cyl
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ drv)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = drv, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = drv, y = cyl)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = drv, y = cyl)) +
facet_wrap(~ class, nrow = 3)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv)) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv)) +
geom_point(mapping = aes(x = displ, y = hwy, color = drv))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, linetype = drv)) +
geom_point() +
geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, linetype = drv, color = drv)) +
geom_point() +
geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, linetype = drv)) +
geom_point() +
geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, linetype = drv)) +
geom_point(mapping = aes(color = class)) +
geom_smooth()
?geom_smooth
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, linetype = drv)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, linetype = drv)) +
geom_point(mapping = aes(color = class)) +
geom_smooth()
se = FALSE
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, linetype = drv)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(se = FALSE)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
?diamonds
cut))ggplot(data = mpg, mapping = aes(x = displ, y = hwy, linetype = drv)) +
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
```{r}
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
```{##Count}
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, linetype = drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class)) + #, color = rgb(0.7,1,0.3)) +
# also try: ...y = hwy, shape = class))
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class)) + #, color = rgb(0.7,1,0.3)) +
# also try: ...y = hwy, shape = class))
facet_wrap(~ class, nrow = 2)
library(c("nycflights13", "gapminder", "Lahman"))
#####**Count is not a variable!** Count comes automatically with a lot of graphs as an attribute.
?stat_summary
ggplot(data = diamonds) +
stat_count(apping = aes(x = cut))
ggplot(data = diamonds) +
stat_count(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
?stat_summary()
ggplot(data = diamonds) +
geom_col(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_col(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_col(mapping = aes(x = cut, y = price))
ggplot(data = diamonds) +
geom_col(mapping = aes(x = cut, y = price, color = price))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, color = cut))
#ggplot(data = diamonds) +
#  geom_bar(mapping = aes(x = cut, fill = cut))
#ggplot(data = diamonds) +
#  geom_bar(mapping = aes(x = cut, color = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity)#,
#position = "fill")
)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity),
position = "fill")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity)#,
#position = "fill")
)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity),
#position = "fill")
position = "dodge"
)
bar + coord_polar()
pie + coord_polar()
pie = ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity),
#position = "fill")
position = "dodge"
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
pie = ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity),
#position = "fill")
position = "dodge"
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
pie + coord_polar()
?labs()
?theme()
?theme(aspect.ratio)
pie = ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity),
#position = "fill")
position = "dodge"
) +
theme(aspect.ratio = 2) +
labs(x = NULL, y = NULL)
pie = ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity),
#position = "fill")
position = "dodge"
) +
theme(aspect.ratio = 2) +
labs(x = NULL, y = NULL)
pie + coord_polar()
pie = ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity),
#position = "fill")
position = "dodge"
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
pie + coord_polar()
library(nycflights13)
library(tidyverse)
jan1 = filter(flights, month == 1, day == 1)
jan1 = filter(flights, month == 1, day == 1)
filter(flights, month == 3, day == 15)
?flights
filter(flights, arr_delay >= 120)
filter(flights, dest == "HOU")
?planes
?airlines
filter(flights, carrier == "AA" | carrier == "UA" | carrier == "DL")
arrange(flights, year)
arrange(flights, year, month, day)
arrange(flights, year, month, day, desc(sched_dep_time))
select(flights, year, month, day)
?everything()
view(select(flights, year, month, day))
view(select(flights, year, month, day))
flight_data <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
view(mutate(flights_sml,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60
))
flight_data <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
view(mutate(flight_data,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60
))
?transmute()
summarize(flights, delay = mean(dep_delay, na.rm = TRUE))
myplot <- mpg
myplot
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
?flights
?n()
# Code before we use pipe:
by_destination <- group_by(flights, dest)
delay <- summarize(by_destination,
# n() gives current group size
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
delay <- filter(delay, count > 20, dest != "HNL")
delay
# Code before we use pipe:
by_destination <- group_by(flights, dest)
delay <- summarize(by_destination,
# n() gives current group size
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
delay <- filter(delay, count > 20, dest != "HNL")
view(delay)
# Create a variable that we can re-use later that removes all cancelled flights
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
not_cancelled %>%
group_by(year, month, day) %>%
summarize(mean = mean(dep_delay))
ggplot(data = delays, mapping = aes(x = delay)) +
geom_freqpoly(binwidth = 10)
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarize(
delay = mean(arr_delay)
)
ggplot(data = delays, mapping = aes(x = delay)) +
geom_freqpoly(binwidth = 10)
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarize(
delay = mean(arr_delay, na.rm = TRUE),
n = n()
)
ggplot(data = delays, mapping = aes(x = n, y = delay)) +
geom_point(alpha = 1/10)
delays %>%
filter(n > 25) %>%
ggplot(mapping = aes(x = n, y = delay)) +
geom_point(alpha = 1/10)
R --version
r --version
install.packages("swirl")
library(swirl)
ls()
